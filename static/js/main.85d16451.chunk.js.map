{"version":3,"sources":["components/Wrapper/index.js","components/Header/index.js","utils/DataAreaContext.js","components/DataBody/index.js","components/DataTable/index.js","components/SearchName/index.js","components/Nav/index.js","utils/API.js","components/DataArea/index.js","components/Main/index.js","App.js","serviceWorker.js","index.js"],"names":["Wrapper","children","className","Header","DataAreaContext","React","createContext","DataBody","context","useContext","undefined","developerState","filteredUsers","name","map","login","picture","phone","email","dob","key","uuid","data-th","src","medium","alt","first","last","href","target","date","dateArray","split","year","join","formatDate","DataTable","id","headings","width","style","onClick","handleSort","SearchName","type","placeholder","aria-label","onChange","e","handleSearchChange","Nav","data-toggle","data-target","aria-controls","aria-expanded","axios","get","DataArea","useState","users","order","setDeveloperState","useEffect","API","then","results","console","log","data","Provider","value","event","filter","filteredList","item","values","toLowerCase","indexOf","heading","currentOrder","elem","toString","sortedUsers","sort","a","b","localeCompare","age","updatedHeadings","length","Main","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.85d16451.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper({ children }) {\n  return <div className=\"wrapper\">{children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <h1>Employee Directory</h1>\n      <h5>Click on a category to sort by ascending or descending</h5>\n      <h5>Or search for a name to filter user by name</h5>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nconst DataAreaContext = React.createContext({});\n\nexport default DataAreaContext;\n","import React, { useContext } from \"react\";\nimport DataAreaContext from \"../../utils/DataAreaContext\";\nimport \"./style.css\";\n\nconst DataBody = () => {\n  const context = useContext(DataAreaContext);\n\n  function formatDate(date) {\n    const dateArray = date.split(\"-\");\n    const year = dateArray[0];\n    const month = dateArray[1];\n    const dayArray = dateArray[2].split(\"T\");\n    const day = dayArray[0];\n    const formattedDate = [month, day, year].join(\"-\");\n    return formattedDate;\n  }\n\n  return (\n    <tbody>\n      {context.developerState.filteredUsers[0] !== undefined &&\n      context.developerState.filteredUsers[0].name !== undefined ? (\n        context.developerState.filteredUsers.map(\n          ({ login, name, picture, phone, email, dob }) => {\n            return (\n              <tr key={login.uuid}>\n                <td data-th=\"Image\" className=\"align-middle\">\n                  <img\n                    src={picture.medium}\n                    alt={\"profile image for \" + name.first + \" \" + name.last}\n                    className=\"img-responsive\"\n                  />\n                </td>\n                <td data-th=\"Name\" className=\"name-cell align-middle\">\n                  {name.first} {name.last}\n                </td>\n                <td data-th=\"Phone\" className=\"align-middle\">\n                  {phone}\n                </td>\n                <td data-th=\"Email\" className=\"align-middle\">\n                  <a href={\"mailto:\" + email} target=\"__blank\">\n                    {email}\n                  </a>\n                </td>\n                <td data-th=\"DOB\" className=\"align-middle\">\n                  {formatDate(dob.date)}\n                </td>\n              </tr>\n            );\n          }\n        )\n      ) : (\n        <></>\n      )}\n    </tbody>\n  );\n};\n\nexport default DataBody;\n","import React, { useContext } from \"react\";\nimport DataBody from \"../DataBody\";\nimport DataAreaContext from \"../../utils/DataAreaContext\";\nimport \"./style.css\";\n\nconst DataTable = () => {\n  const context = useContext(DataAreaContext);\n\n  return (\n    <div className=\"datatable mt-5\">\n      <table\n        id=\"table\"\n        className=\"table table-striped table-hover table-condensed\"\n      >\n        <thead>\n          <tr>\n            {context.developerState.headings.map(({ name, width }) => {\n              return (\n                <th\n                  className=\"col\"\n                  key={name}\n                  style={{ width }}\n                  onClick={() => {\n                    context.handleSort(name);\n                  }}\n                >\n                  {name}\n                  <span className=\"pointer\"></span>\n                </th>\n              );\n            })}\n          </tr>\n        </thead>\n\n        <DataBody />\n      </table>\n    </div>\n  );\n};\n\nexport default DataTable;\n","import React, { useContext } from \"react\";\nimport DataAreaContext from \"../../utils/DataAreaContext\";\nimport \"./style.css\";\n\nconst SearchName = () => {\n  const context = useContext(DataAreaContext);\n\n  return (\n    <div className=\"searchbox\">\n      <div className=\"input-group\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\" id=\"\">\n            Search\n          </span>\n        </div>\n        <input\n          className=\"form-control mr-sm-2\"\n          type=\"search\"\n          placeholder=\"name\"\n          aria-label=\"Search\"\n          onChange={(e) => context.handleSearchChange(e)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchName;\n","import React from \"react\";\nimport SearchName from \"./../SearchName\";\nimport \"./style.css\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse row\" id=\"navbarNav\">\n        <div className=\"search-area col-4\">\n          <SearchName />\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import axios from \"axios\";\n\nexport default {\n  getUsers: function () {\n    return axios.get(\"https://randomuser.me/api/?results=50\");\n  },\n};\n","import React, { useState, useEffect } from \"react\";\nimport DataTable from \"./../DataTable\";\nimport Nav from \"./../Nav\";\nimport API from \"../../utils/API\";\nimport DataAreaContext from \"../../utils/DataAreaContext\";\n\nimport \"./style.css\";\n\nconst DataArea = () => {\n  const [developerState, setDeveloperState] = useState({\n    users: [],\n    order: \"descend\",\n    filteredUsers: [],\n    headings: [\n      { name: \"Image\", width: \"10%\", order: \"descend\" },\n      { name: \"name\", width: \"10%\", order: \"descend\" },\n      { name: \"phone\", width: \"20%\", order: \"descend\" },\n      { name: \"email\", width: \"20%\", order: \"descend\" },\n      { name: \"dob\", width: \"10%\", order: \"descend\" },\n    ],\n  });\n\n  const handleSort = (heading) => {\n    let currentOrder = developerState.headings\n      .filter((elem) => elem.name === heading)\n      .map((elem) => elem.order)\n      .toString();\n\n    if (currentOrder === \"descend\") {\n      currentOrder = \"ascend\";\n    } else {\n      currentOrder = \"descend\";\n    }\n\n    const compareFnc = (a, b) => {\n      if (currentOrder === \"ascend\") {\n        if (a[heading] === undefined) {\n          return 1;\n        } else if (b[heading] === undefined) {\n          return -1;\n        } else if (heading === \"name\") {\n          return a[heading].first.localeCompare(b[heading].first);\n        } else if (heading === \"dob\") {\n          return a[heading].age - b[heading].age;\n        } else {\n          return a[heading].localeCompare(b[heading]);\n        }\n      } else {\n        if (a[heading] === undefined) {\n          return 1;\n        } else if (b[heading] === undefined) {\n          return -1;\n        } else if (heading === \"name\") {\n          return b[heading].first.localeCompare(a[heading].first);\n        } else if (heading === \"dob\") {\n          return b[heading].age - a[heading].age;\n        } else {\n          return b[heading].localeCompare(a[heading]);\n        }\n      }\n    };\n    const sortedUsers = developerState.filteredUsers.sort(compareFnc);\n    const updatedHeadings = developerState.headings.map((elem) => {\n      elem.order = elem.name === heading ? currentOrder : elem.order;\n      return elem;\n    });\n\n    setDeveloperState({\n      ...developerState,\n      filteredUsers: sortedUsers,\n      headings: updatedHeadings,\n    });\n  };\n\n  const handleSearchChange = (event) => {\n    const filter = event.target.value;\n    const filteredList = developerState.users.filter((item) => {\n      let values =\n        item.name.first.toLowerCase() + \" \" + item.name.last.toLowerCase();\n      console.log(filter, values);\n      if (values.indexOf(filter.toLowerCase()) !== -1) {\n        return item;\n      }\n    });\n\n    setDeveloperState({ ...developerState, filteredUsers: filteredList });\n  };\n\n  useEffect(() => {\n    API.getUsers().then((results) => {\n      console.log(results.data.results);\n      setDeveloperState({\n        ...developerState,\n        users: results.data.results,\n        filteredUsers: results.data.results,\n      });\n    });\n  }, []);\n\n  return (\n    <DataAreaContext.Provider\n      value={{ developerState, handleSearchChange, handleSort }}\n    >\n      <Nav />\n      <div className=\"data-area\">\n        {developerState.filteredUsers.length > 0 ? <DataTable /> : <div></div>}\n      </div>\n    </DataAreaContext.Provider>\n  );\n};\n\nexport default DataArea;\n","import React from \"react\";\nimport DataArea from \"./../DataArea/index\";\nimport \"./style.css\";\n\nfunction Main() {\n  return (\n    <div>\n      <DataArea />\n    </div>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header />\n        <Main />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}